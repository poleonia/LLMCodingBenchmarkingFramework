{
    "identifier": "problem_17",
    "description": "Compare the radii of the minimum enclosing circles for two contours.",
    "prompts": [
        {
            "prompt_id": "prompt_1",
            "prompt": "Please fix an incomplete function `minimum_enclosing_circle_radius_comparison` that calculates and compares the radii of the minimum enclosing circles for two given contours. Each contour is represented as a list of points, where each point is a list of two integers representing the x and y coordinates. The function should return the absolute difference in the radii of the minimum enclosing circles of the two contours.",
            "genericize": false,
            "input_code": "import numpy as np\nimport cv2\n\ndef minimum_enclosing_circle_radius_comparison(contour1: List[List[int]], contour2: List[List[int]]) -> float:\n    (x1, y1), radius1 = cv2.minEnclosingCircle(np.array(contour1))\n    # A line of code is missing here\n    return abs(radius1 - radius2)"
        },
        {
            "prompt_id": "prompt_2",
            "prompt": "Please fix an incomplete function `minimum_enclosing_circle_radius_comparison` that calculates and compares the radii of the minimum enclosing circles for two given contours. Each contour is represented as a list of points, where each point is a list of two integers representing the x and y coordinates. The function should return the absolute difference in the radii of the minimum enclosing circles of the two contours.",
            "genericize": false,
            "input_code": "import numpy as np\nimport cv2\n\ndef minimum_enclosing_circle_radius_comparison(contour1: List[List[int]], contour2: List[List[int]]) -> float:\n    (x1, y1), radius1 = cv2.minEnclosingCircle(np.array(contour1))\n    return abs(radius1 - radius2)"
        },
        {
            "prompt_id": "prompt_3",
            "prompt": "Please fix an incomplete function `minimum_enclosing_circle_radius_comparison` that calculates and compares the radii of the minimum enclosing circles for two given contours. Each contour is represented as a list of points, where each point is a list of two integers representing the x and y coordinates. The function should return the absolute difference in the radii of the minimum enclosing circles of the two contours.",
            "genericize": false,
            "input_code": "import numpy as np\nimport cv2\n\n    (x1, y1), radius1 = cv2.minEnclosingCircle(np.array(contour1))\n    return abs(radius1 - radius2)"
        }
    ],
    "function_prototype": {
        "function_name": "minimum_enclosing_circle_radius_comparison",
        "parameters": [
            {
                "name": "contour1",
                "type": "List[List[int]]"
            },
            {
                "name": "contour2",
                "type": "List[List[int]]"
            }
        ],
        "return_values": [
            {
                "type": "float"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "contour1": [
                    [
                        0,
                        0
                    ],
                    [
                        2,
                        0
                    ],
                    [
                        1,
                        1
                    ]
                ],
                "contour2": [
                    [
                        1,
                        1
                    ],
                    [
                        3,
                        1
                    ],
                    [
                        2,
                        2
                    ]
                ]
            },
            "expected_output": [
                0
            ]
        },
        {
            "input": {
                "contour1": [
                    [
                        1,
                        1
                    ],
                    [
                        3,
                        1
                    ],
                    [
                        2,
                        2
                    ]
                ],
                "contour2": [
                    [
                        4,
                        4
                    ],
                    [
                        6,
                        4
                    ],
                    [
                        5,
                        5
                    ]
                ]
            },
            "expected_output": [
                0
            ]
        }
    ],
    "optimal_solution": "import numpy as np\nimport cv2\n\ndef minimum_enclosing_circle_radius_comparison(contour1: List[List[int]], contour2: List[List[int]]) -> float:\n    (x1, y1), radius1 = cv2.minEnclosingCircle(np.array(contour1))\n    (x2, y2), radius2 = cv2.minEnclosingCircle(np.array(contour2))\n    return abs(radius1 - radius2)",
    "tags": [
        "Geometry",
        "Enclosing Circle",
        "Radius Comparison",
        "Contour",
        "Intermediate"
    ]
}