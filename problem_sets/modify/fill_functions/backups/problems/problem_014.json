{
    "identifier": "problem_14",
    "description": "Compare the average distances of contour points from their respective centroids.",
    "prompts": [
        {
            "prompt_id": "prompt",
            "prompt": "Please fix an incomplete function `average_distance_from_centroid_comparison` that calculates and compares the average distances of the points in two given contours from their respective centroids. Each contour is represented as a list of points, where each point is a list of two integers representing the x and y coordinates. The function should return the absolute difference in the average distances from the centroids for the two contours.",
            "genericize": false,
            "input_code": "import numpy as np\n\ndef average_distance_from_centroid_comparison(contour1: List[List[int]], contour2: List[List[int]]) -> float:\n    centroid1 = np.mean(contour1, axis=0)\n    avg_distance1 = np.mean(np.sqrt(np.sum((contour1 - centroid1)**2, axis=1)))\n    # A line of code is missing here\n    return abs(avg_distance1 - avg_distance2)"
        }
    ],
    "function_prototype": {
        "function_name": "average_distance_from_centroid_comparison",
        "parameters": [
            {"name": "contour1", "type": "List[List[int]]"},
            {"name": "contour2", "type": "List[List[int]]"}
        ],
        "return_values": [{"type": "float"}]
    },
    "correctness_test_suite": [
        {
            "input": {
                "contour1": [[0, 0], [2, 0], [1, 1]],
                "contour2": [[1, 1], [3, 1], [2, 2]]
            },
            "expected_output": [0]
        },
        {
            "input": {
                "contour1": [[1, 1], [3, 1], [2, 2]],
                "contour2": [[4, 4], [6, 4], [5, 5]]
            },
            "expected_output": [1.1102230246251565e-16]
        }
    ],
    "optimal_solution": "import numpy as np\n\ndef average_distance_from_centroid_comparison(contour1: List[List[int]], contour2: List[List[int]]) -> float:\n    centroid1 = np.mean(contour1, axis=0)\n    avg_distance1 = np.mean(np.sqrt(np.sum((contour1 - centroid1)**2, axis=1)))\n    centroid2 = np.mean(contour2, axis=0)\n    avg_distance2 = np.mean(np.sqrt(np.sum((contour2 - centroid2)**2, axis=1)))\n    return abs(avg_distance1 - avg_distance2)",
    "tags": ["Geometry", "Average Distance", "Centroid", "Contour", "Intermediate"]
}
