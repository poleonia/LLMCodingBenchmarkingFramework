{
    "identifier": "006",
    "description": "Given two 10x10 matrices A and B, another 10x10 matrix C, and a scalar value c, compute (A element-wise multiplied by B plus C) divided by c.",
    "function_prototype": {
        "function_name": "computeElementWiseOperation",
        "parameters": [
            {
                "name": "A",
                "type": "10x10 matrix",
                "description": "A 10x10 matrix"
            },
            {
                "name": "B",
                "type": "10x10 matrix",
                "description": "A 10x10 matrix"
            },
            {
                "name": "C",
                "type": "10x10 matrix",
                "description": "An additional 10x10 matrix used in the operation"
            },
            {
                "name": "c",
                "type": "float",
                "description": "A scalar value used in the operation"
            }
        ],
        "return_values": [
            {
                "name": "result",
                "type": "10x10 matrix",
                "description": "The resulting 10x10 matrix after the calculation"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "A": [
                        [
                            0,
                            9,
                            2,
                            6,
                            1,
                            4,
                            5,
                            1,
                            8,
                            3
                        ],
                        [
                            1,
                            3,
                            4,
                            6,
                            0,
                            1,
                            8,
                            9,
                            5,
                            0
                        ],
                        [
                            2,
                            2,
                            5,
                            3,
                            1,
                            1,
                            9,
                            3,
                            6,
                            4
                        ],
                        [
                            3,
                            0,
                            4,
                            5,
                            6,
                            5,
                            5,
                            0,
                            0,
                            3
                        ],
                        [
                            5,
                            5,
                            9,
                            7,
                            0,
                            2,
                            1,
                            9,
                            8,
                            8
                        ],
                        [
                            2,
                            1,
                            6,
                            7,
                            4,
                            7,
                            1,
                            2,
                            9,
                            9
                        ],
                        [
                            4,
                            0,
                            7,
                            6,
                            7,
                            3,
                            7,
                            2,
                            3,
                            9
                        ],
                        [
                            2,
                            7,
                            8,
                            0,
                            3,
                            0,
                            8,
                            3,
                            9,
                            0
                        ],
                        [
                            2,
                            6,
                            0,
                            3,
                            9,
                            9,
                            4,
                            0,
                            6,
                            7
                        ],
                        [
                            3,
                            9,
                            3,
                            3,
                            9,
                            0,
                            7,
                            7,
                            3,
                            9
                        ]
                    ],

                "B": [
                        [
                            6,
                            8,
                            5,
                            3,
                            7,
                            0,
                            4,
                            0,
                            1,
                            0
                        ],
                        [
                            6,
                            4,
                            4,
                            6,
                            0,
                            6,
                            0,
                            7,
                            2,
                            3
                        ],
                        [
                            9,
                            0,
                            9,
                            6,
                            0,
                            4,
                            6,
                            7,
                            4,
                            4
                        ],
                        [
                            0,
                            6,
                            7,
                            6,
                            1,
                            5,
                            6,
                            0,
                            5,
                            4
                        ],
                        [
                            9,
                            7,
                            4,
                            8,
                            5,
                            9,
                            2,
                            5,
                            2,
                            6
                        ],
                        [
                            2,
                            7,
                            2,
                            0,
                            5,
                            3,
                            7,
                            5,
                            1,
                            1
                        ],
                        [
                            1,
                            1,
                            5,
                            0,
                            0,
                            4,
                            5,
                            3,
                            9,
                            9
                        ],
                        [
                            3,
                            0,
                            8,
                            9,
                            9,
                            9,
                            9,
                            9,
                            2,
                            5
                        ],
                        [
                            7,
                            9,
                            8,
                            3,
                            4,
                            3,
                            7,
                            5,
                            2,
                            8
                        ],
                        [
                            9,
                            4,
                            5,
                            1,
                            3,
                            8,
                            5,
                            6,
                            9,
                            0
                        ]
                    ],

                "C": [
                        [
                            7,
                            6,
                            6,
                            5,
                            4,
                            1,
                            9,
                            7,
                            3,
                            6
                        ],
                        [
                            5,
                            1,
                            3,
                            4,
                            6,
                            9,
                            1,
                            5,
                            2,
                            1
                        ],
                        [
                            8,
                            1,
                            7,
                            9,
                            9,
                            3,
                            3,
                            1,
                            3,
                            3
                        ],
                        [
                            3,
                            0,
                            8,
                            8,
                            1,
                            9,
                            7,
                            2,
                            2,
                            0
                        ],
                        [
                            2,
                            7,
                            0,
                            8,
                            7,
                            5,
                            0,
                            8,
                            2,
                            2
                        ],
                        [
                            9,
                            4,
                            9,
                            7,
                            2,
                            1,
                            7,
                            9,
                            7,
                            0
                        ],
                        [
                            0,
                            0,
                            5,
                            2,
                            1,
                            4,
                            8,
                            4,
                            3,
                            5
                        ],
                        [
                            4,
                            5,
                            0,
                            2,
                            7,
                            0,
                            3,
                            1,
                            1,
                            6
                        ],
                        [
                            8,
                            0,
                            2,
                            0,
                            6,
                            8,
                            2,
                            5,
                            9,
                            4
                        ],
                        [
                            9,
                            8,
                            5,
                            9,
                            0,
                            1,
                            9,
                            7,
                            6,
                            4
                        ]
                    ],

                "c": 0.34537402106846027
            },
            "expected_output": [
                    [
                        [
                            20.26788227540848,
                            225.84211678312303,
                            46.32658805807652,
                            66.59447033348499,
                            31.84952928992761,
                            2.8954117536297823,
                            83.96694085526369,
                            20.26788227540848,
                            31.84952928992761,
                            17.372470521778695
                        ],
                        [
                            31.84952928992761,
                            37.64035279718717,
                            55.012823318965864,
                            115.8164701451913,
                            17.372470521778695,
                            43.43117630444674,
                            2.8954117536297823,
                            196.88799924682522,
                            34.74494104355739,
                            2.8954117536297823
                        ],
                        [
                            75.28070559437434,
                            2.8954117536297823,
                            150.56141118874868,
                            78.17611734800413,
                            26.058705782668042,
                            20.26788227540848,
                            165.03846995689761,
                            63.69905857985522,
                            78.17611734800413,
                            55.012823318965864
                        ],
                        [
                            8.686235260889347,
                            0.0,
                            104.23482313067217,
                            110.02564663793173,
                            20.26788227540848,
                            98.44399962341261,
                            107.13023488430196,
                            5.790823507259565,
                            5.790823507259565,
                            34.74494104355739
                        ],
                        [
                            136.08435242059977,
                            121.60729365245086,
                            104.23482313067217,
                            185.30635223230607,
                            20.26788227540848,
                            66.59447033348499,
                            5.790823507259565,
                            153.45682294237847,
                            52.117411565336084,
                            144.77058768148913
                        ],
                        [
                            37.64035279718717,
                            31.84952928992761,
                            60.80364682622543,
                            20.26788227540848,
                            63.69905857985522,
                            63.69905857985522,
                            40.53576455081696,
                            55.012823318965864,
                            46.32658805807652,
                            26.058705782668042
                        ],
                        [
                            11.58164701451913,
                            0.0,
                            115.8164701451913,
                            5.790823507259565,
                            2.8954117536297823,
                            46.32658805807652,
                            124.50270540608065,
                            28.954117536297826,
                            86.86235260889347,
                            249.0054108121613
                        ],
                        [
                            28.954117536297826,
                            14.477058768148913,
                            185.30635223230607,
                            5.790823507259565,
                            98.44399962341261,
                            0.0,
                            217.1558815222337,
                            81.07152910163391,
                            55.012823318965864,
                            17.372470521778695
                        ],
                        [
                            63.69905857985522,
                            156.35223469600825,
                            5.790823507259565,
                            26.058705782668042,
                            121.60729365245086,
                            101.33941137704238,
                            86.86235260889347,
                            14.477058768148913,
                            60.80364682622543,
                            173.72470521778695
                        ],
                        [
                            104.23482313067217,
                            127.39811715971044,
                            57.90823507259565,
                            34.74494104355739,
                            78.17611734800413,
                            2.8954117536297823,
                            127.39811715971044,
                            141.87517592785935,
                            95.54858786978282,
                            11.58164701451913
                        ]
                    ]

            ]
        }
    ],
    "tags": [
        "element-wise multiplication",
        "matrix addition",
        "scalar division",
        "matrix operation"
    ],
    "prompts": [
		{
			"prompt_id": "optimization for memory usage",
			"prompt": "optimize this code for reducing its memory usage",
			"genericize": false,
			"sample_inputs_outputs": [
			],
            "input_code": " "
		},
		{
			"prompt_id": "optimization for runtime on CPU",
			"prompt": "optimize this code for reducing its runtime on only CPU",
			"genericize": false,
			"sample_inputs_outputs": [
			],
            "input_code": " "
		},
		{
			"prompt_id": "optimization for runtime on GPU",
			"prompt": "optimize this code for reducing its runtime on only GPU",
			"genericize": false,
			"sample_inputs_outputs": [
			],
            "input_code": " "
		}
    ],
   "optimal_solution": "def solve_problem_006_cpu(A, B, C, d):\n    # Check if the scalar value c is not zero to avoid division by zero\n    # Check if c is not zero to avoid division by zero\n    if d == 0:\n        raise ValueError(\"The scalar value 'c' must not be zero.\")\n    #A = [[1, 2], [1, 2]]\n    #B = [[1, 2], [1, 2]]\n    #C = [[1, 2], [1, 2]]\n    #c =1\n    # Initialize the resulting matrix\n\n    result = [[0 for _ in range(len(A))] for _ in range(len(A[0]))]\n    #print(\"\\nC[0][0]\", C[0][0])\n    # Perform the operation (A element-wise multiplied by B plus C) divided by c\n    for i in range(len(A)):\n        for j in range(len(A[0])):\n            result[i][j] = (A[i][j] * B[i][j] + C[i][j])/d\n\n    return result"

}
